@startuml

class Block
{
    + Px : int
    + Py : int
}

' フィールドの状態を管理する
class Field
{
    - _width : int
    - _height : int
    ..
    - _activeParts : Block[,]

    --
    + ResetField() : void
    ' @return ブロックが積みあがってしまったらtrue, そうでなければfalse を返す
    + SetBlocks(blocks : Block[]) : bool

    + IsHit(blocks : Block[]) : bool
}

' ゲームの進行を管理する
class GameController
{
    - _players : Player[]
    - _boot : StateGameBoot
    - _main : StateGameMain
    - _finish : StateGameFinish

    - Start() : void

    + BootGame() : void
    + RunGame() : void
    + FinishGame() : void
}

class Player
{
    - _parent : StateGameMain
    - _field : Field
    - _input : InputManager
    - _blockSetOptions : BlockSet[]
    - _alive : bool

    - _currentBlock : BlockSet

    + Setup(parent : StateGameMain, blockSetOptions : BlockSet[]) : void
    + IsAlive() : bool
    - FixedUpdate() : void
    - PullNextBlock() : void
}

class StateGameBoot
{
    - _parent : GameController

    + Setup(parent : GameController) : void
    - CoRun() : IEnumerator
}

class StateGameMain
{
    - _parent : GameController
    - _players : Player[]
    - _blockSetOptions : BlockSet[]

    + Setup(parent : GameController, players : Player[]) : void
    + PlayerGameOver(player : Player) : void
    - GetNumberOfAlivingPlayer() : int
}

class StateGameFinish
{
    - _parent : GameController

    + Setup(parent : GameController) : void
    - CoRun() : IEnumerator
}

abstract class InputManager
{
    + {abstract} IsRotateRight() : bool
    + {abstract} IsRotateLeft() : bool
    + {abstract} IsMoveRight() : bool
    + {abstract} IsMoveLeft() : bool
    + {abstract} IsMoveDown) : bool
}

class UnityKeyInputManager
{
    + IsRotateRight() : bool
    + IsRotateLeft() : bool
    + IsMoveRight() : bool
    + IsMoveLeft() : bool
    + IsMoveDown() : bool
}

' ブロックの状態を管理する
class BlockSet
{
    - _prefabPart : Block
    - _partsPositions : Vector2Int[]
    - _activeBlocks : Block[]
    - _field : Field

    - SetupParts() : void

    - Start() : void
    - FixedUpdate() : void

    + SetField(filed: Field) : void
    + RotateRight() : void
    + RotateLeft() : void
    ' @return 移動できる場合はtrue, 何かにぶつかって移動できない場合はfalse
    + MoveLeft() : bool
    ' @return 移動できる場合はtrue, 何かにぶつかって移動できない場合はfalse
    + MoveRight() : bool
    + MoveDown() : void
    ' @return フィールドに設置された直後であれば設置されたブロックの配列を、設置されていなければnull を返す
    + IsSetOnField() : Block[]
}


class StatusPanel
{
    - _scoreText : Text
 
    + ResetScore() : void
    + AddScore(addedScore : int) : void
}

Player "1" *-- "1" Field
Player "1" *-- "1" BlockSet
Player "1" *-- "1" InputManager

GameController "1" *-- "*" Player
GameController "1" *-- "1" StateGameBoot
GameController "1" *-- "1" StateGameMain
GameController "1" *-- "1" StateGameFinish

StateGameMain "1" o--o "*" Player

StatusPanel "1" --o "1" GameController

BlockSet <|.. DigitalBlockSet
BlockSet <|.. AnalogBlockSet

InputManager <|.. UnityKeyInputManager

Field "1" o-- "*" Block
DigitalBlockSet "1" o-- "*" Block
AnalogBlockSet "1" o-- "*" Block

@enduml